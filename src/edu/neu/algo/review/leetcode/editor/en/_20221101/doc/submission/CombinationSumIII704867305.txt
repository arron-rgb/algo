class Solution {
  List<List<Integer>> ans;

  public List<List<Integer>> combinationSum3(int k, int n) {
    ans = new ArrayList<>();
    dfs(new ArrayList<>(), k, 1, n);
    return ans;
  }

  void dfs(List<Integer> tmp, int k, int num, int n) {
    if (tmp.size() == k && n == 0) {
      ans.add(new ArrayList<>(tmp));
      return;
    }

    for (int i = num; i < 10; i++) {
      tmp.add(i);
      dfs(tmp, k, i + 1, n - i);
      tmp.remove(tmp.size() - 1);
    }
  }

}
//runtime:1 ms
//memory:41.1 MB
