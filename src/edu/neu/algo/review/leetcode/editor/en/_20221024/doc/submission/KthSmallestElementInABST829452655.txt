  /**
   * Definition for a binary tree node. public class TreeNode { int val; TreeNode left; TreeNode right; TreeNode() {}
   * TreeNode(int val) { this.val = val; } TreeNode(int val, TreeNode left, TreeNode right) { this.val = val; this.left
   * = left; this.right = right; } }
   */
  class Solution {
    public int kthSmallest(TreeNode root, int k) {
      int left = countNodes(root.left);
      if (k <= left) {
        return kthSmallest(root.left, k);
      } else if (k > left + 1) {
        return kthSmallest(root.right, k - 1 - left);
      }

      return root.val;
    }

    public int countNodes(TreeNode n) {
      if (n == null) {
        return 0;
      }

      return 1 + countNodes(n.left) + countNodes(n.right);
    }
  }

//runtime:0 ms
//memory:42.2 MB
